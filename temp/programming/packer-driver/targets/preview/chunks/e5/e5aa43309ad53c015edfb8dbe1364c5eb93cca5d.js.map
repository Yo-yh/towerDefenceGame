{"version":3,"sources":["file:///D:/Gameproject/NewProject-001/assets/script/PaoPerManeger.ts"],"names":["_decorator","Component","PhysicsSystem2D","EPhysics2DDrawFlags","Collider2D","Contact2DType","resources","Layers","Prefab","instantiate","ProgressBar","livingSystemManeger","ccclass","property","PaoPerManeger","bulletArray","hasEmeny","onLoad","instance","enable","debugDrawFlags","Aabb","Pair","CenterOfMass","Joint","Shape","start","initialSanshePao","that","schedule","console","log","createBullet","collider","node","getComponent","on","BEGIN_CONTACT","onBeginContact","END_CONTACT","onEndContact","PRE_SOLVE","onPreSolve","POST_SOLVE","onPostSolve","selfCollider","otherCollider","contact","underFire","update","deltaTime","length","speed","SanShePaoLivSysMag","attackSpeed","i","y","position","x","setPosition","destroyThisNode","destroy","Collider","name","livingValue","parent","getChildByName","progress","load","err","layer","Enum","UI_2D","addChild","push"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, PhysicsSystem2D, EPhysics2DDrawFlags, Collider2D, Contact2DType, IPhysics2DContact, BoxCollider2D, director, Sprite, Color, resources, SpriteFrame, Layers, find, Prefab, instantiate, Vec2, ProgressBar } from 'cc';\r\nimport { livingSystemManeger } from './livingSystemManeger';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PaoPerManeger')\r\nexport class PaoPerManeger extends Component {\r\n    \r\n    public bulletArray = [];\r\n    public hasEmeny = true;\r\n    @property(livingSystemManeger)\r\n    SanShePaoLivSysMag:livingSystemManeger = null;\r\n    onLoad(){\r\n        // director.enable = true;\r\n        //绘制物理信息\r\n        PhysicsSystem2D.instance.enable = true;\r\n        PhysicsSystem2D.instance.debugDrawFlags = EPhysics2DDrawFlags.Aabb | \r\n            EPhysics2DDrawFlags.Pair | \r\n            EPhysics2DDrawFlags.CenterOfMass |\r\n            EPhysics2DDrawFlags.Joint |\r\n            EPhysics2DDrawFlags.Shape ;\r\n    }\r\n\r\n    start(){\r\n        this.initialSanshePao();\r\n        // 批量生成子弹\r\n        let that = this;\r\n        this.schedule(function(){\r\n            if(this.hasEmeny){\r\n                console.log('createBullet')\r\n                that.createBullet();\r\n            }\r\n        },1)\r\n        \r\n        //注册单个碰撞体的回调函数\r\n        // console.log('tool information')\r\n        let collider = this.node.getComponent(Collider2D);\r\n        // console.log(collider);\r\n        // console.log(collider);\r\n        if (collider) {\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n            collider.on(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\r\n            collider.on(Contact2DType.POST_SOLVE, this.onPostSolve, this);\r\n        }\r\n\r\n        // 注册全局碰撞回调函数\r\n        // if (PhysicsSystem2D.instance) {\r\n        //     PhysicsSystem2D.instance.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n        //     PhysicsSystem2D.instance.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n        //     PhysicsSystem2D.instance.on(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\r\n        //     PhysicsSystem2D.instance.on(Contact2DType.POST_SOLVE, this.onPostSolve, this);\r\n        // }\r\n    }\r\n    \r\n    onBeginContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体开始接触时被调用一次\r\n        this.hasEmeny = true;\r\n        // console.log('I am PAO');\r\n        //64是tool_target\r\n        //16是diji_self\r\n        // console.log('selfCollider',selfCollider.group);\r\n        // console.log('otherCollider',otherCollider.node.name);\r\n\r\n        this.underFire(otherCollider)\r\n        \r\n        \r\n        //当self碰撞体是self的时候，才会触发这个操作\r\n        // if (selfCollider.group == 4){\r\n        //     this.underFire(otherCollider)\r\n        // }\r\n        \r\n\r\n    }\r\n    onEndContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体结束接触时被调用一次\r\n        // console.log('PAO onEndContact');\r\n        // this.hasEmeny = false;\r\n\r\n\r\n    }\r\n    onPreSolve (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 每次将要处理碰撞体接触逻辑时被调用\r\n        console.log('PAO onPreSolve');\r\n    }\r\n    onPostSolve (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 每次处理完碰撞体接触逻辑时被调用\r\n        // console.log('PAO onPostSolve');\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        console.log(this.bulletArray.length);\r\n        //获取攻击速度\r\n        let speed = this.SanShePaoLivSysMag.attackSpeed;\r\n        for(let i=0;i<this.bulletArray.length;i++){\r\n            let node = this.bulletArray[i];\r\n            let y = node.position.y;\r\n            let x = node.position.x;\r\n            x = x - speed * deltaTime;\r\n            y = y + speed * deltaTime;\r\n            node.setPosition(x,y,0)\r\n            //TODO:出屏幕后销毁\r\n        }\r\n    }\r\n    destroyThisNode(){\r\n        this.node.destroy()\r\n    }\r\n    initialSanshePao(){\r\n        this.SanShePaoLivSysMag = new livingSystemManeger(100,10,10,1,10);\r\n        // let that = this;\r\n        // resources.load(\"sanshe/SpriteFrame\",SpriteFrame,(err,SpriteFrame)=>{\r\n        //     if (!SpriteFrame) {\r\n        //         console.log('散射炮精灵图为空')\r\n        //     }else{\r\n        //         console.log('散射跑精灵图加载完成')\r\n        //         this.node.getComponent(Sprite).spriteFrame = SpriteFrame;\r\n        //         this.no\r\n        //     }\r\n        // })\r\n        console.log(\"散射炮初始化成功\")\r\n    }\r\n    underFire(Collider: Collider2D){\r\n        //判断是被谁攻击的\r\n\r\n        //目前为默认减少10;\r\n        if(Collider.node.name == \"Bullet_Pre\"){\r\n            // console.log(\"我军受到攻击\")\r\n            if(this.SanShePaoLivSysMag.livingValue - 80 <= 0){\r\n                this.node.parent.destroy()\r\n            }else{\r\n                this.SanShePaoLivSysMag.livingValue -=80\r\n                // console.log(\"生命值为：\",this.SanShePaoLivSysMag.livingValue)\r\n                this.node.parent.getChildByName(\"ProgressBar\").getComponent(ProgressBar).progress = 0.5 * (this.SanShePaoLivSysMag.livingValue/100)\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    //生成子弹\r\n    createBullet(){\r\n        // let node = new Node();\r\n        // node.addComponent(Sprite);\r\n        let that = this;\r\n        resources.load(\"perfabs/PaoBulletPer\",Prefab,(err,Prefab)=>{\r\n            if(!Prefab){\r\n                console.log('子弹预制体为空')\r\n            }else{\r\n                console.log('预制体制作完成')\r\n                let node = instantiate(Prefab);\r\n                if(!node){\r\n                    console.log('没有节点')\r\n                }else{\r\n                    // console.log(node)\r\n                    // let pos = new Vec2();\r\n                    node.layer = Layers.Enum.UI_2D;\r\n                    let x = that.node.position.x + 400;\r\n                    let y = that.node.position.x + 225;\r\n                    \r\n                    // let shit = pos.set(x,y)\r\n                    // x = shit.x - 800;                   \r\n                    // y = shit.y - 450;\r\n                    console.log(x,y)\r\n                    node.setPosition(0,0,0);\r\n                    that.node.addChild(node);\r\n                    that.bulletArray.push(node);\r\n                }\r\n                \r\n            }\r\n        })\r\n\r\n        \r\n        \r\n        // resources.load('zidan1/spriteFrame',SpriteFrame,(_err,sproteFarme)=>{\r\n        //     node.getComponent(Sprite).spriteFrame = sproteFarme;\r\n        //     node.layer = Layers.Enum.UI_2D;\r\n        //     console.log(find(\"left\"))\r\n        //     console.log(this.node)\r\n        //     node.parent = this.node;\r\n        //     console.log(node);\r\n        //     // node.parent = find(\"left\").getChildByName(\"rightUp\").getChildByName(\"pao\")\r\n        // })\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"]}