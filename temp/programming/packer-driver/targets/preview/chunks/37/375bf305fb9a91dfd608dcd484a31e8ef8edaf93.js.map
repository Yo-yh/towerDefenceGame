{"version":3,"sources":["file:///D:/Gameproject/NewProject-001/assets/script/pao.ts"],"names":[],"mappingssourcesContent":["// import { _decorator, Component, Node, Sprite, SpriteFrame, resources, director, Layers, Scene, UITransform, Vec3, Vec2, BoxCollider2D, Collider, Collider2D, Contact2DType, find} from 'cc';\r\n// import { PaoState } from './PaoState';\r\n// import { test } from './test';\r\n// import { toolPyManeger } from './toolPyManeger';\r\n// import { ToolStateManeger } from './ToolStateManeger';\r\n// import { workPyManeger } from './workPyManeger';\r\n// const { ccclass, property } = _decorator;\r\n\r\n// @ccclass('pao')\r\n// export class pao extends Component {\r\n//     @property(ToolStateManeger)\r\n//     ToolStateManeger:ToolStateManeger = null;\r\n    \r\n//     start() {\r\n//         //TODO：需要将该点击监听独立为一个函数，被多个道具节点所调用。\r\n//         this.node.on(Node.EventType.MOUSE_UP, (event) => {\r\n//             //判断是否已经存在文字框，避免重复创建文字框组件;\r\n//             if (this.node.parent.parent.getChildByName('infoBox')){\r\n//                 //TODO：当当前显示的内容为其他道具时，需要动态渲染文字框内的内容。\r\n//                 //TODO: 当前显示的内容为本道具时，销毁文字框。\r\n//                 console.log('文字框节点已存在，正在销毁')\r\n//                 this.node.parent.parent.getChildByName('infoBox').destroy();\r\n//             }else{\r\n//                 console.log('Mouse down');\r\n//                 let node = new Node('infoBox');\r\n//                 node.addComponent(Sprite);\r\n//                 // node.getComponent(Sprite).spriteFrame = new SpriteFrame(url.raw(\"resources/game/wenzikuang\"))\r\n//                 node.setPosition(-500,10,0);\r\n//                 resources.load('wenzikuang/spriteFrame',SpriteFrame,(_err,spriteFrame)=>{\r\n//                     node.getComponent(Sprite).spriteFrame = spriteFrame;\r\n//                     //在cocos3x版本中，layer默认为default，node.layer = Layers.Enum.UI_2D；\r\n//                     //2d摄像头可见的是UI_2D和UI_3D\r\n//                     node.layer = Layers.Enum.UI_2D;\r\n//                     console.log(node);\r\n//                     console.log('文字框创建成功');\r\n//                 })\r\n//                 // director.getScene().addChild(node);\r\n//                 node.parent=this.node.parent.parent;\r\n//                 // this.node.addChild(node);\r\n//             }\r\n//           }, this);\r\n\r\n          \r\n          \r\n//     }\r\n\r\n//     update(deltaTime: number) {\r\n//         this.node.on(Node.EventType.TOUCH_MOVE,(event)=>{\r\n//             if (this.node.parent.parent.parent.getChildByName('pao1')){\r\n//                 console.log('炮节点已存在，正在移动')\r\n//                 let currentNode = this.node.parent.parent.parent.getChildByName('pao1');\r\n        \r\n//                 // console.log(event.getLocationX(),event.getLocationY());\r\n                \r\n//                 //触摸点的世界坐标\r\n//                 let pos = new Vec2();\r\n//                 let shit = pos.set(event.getUILocation())\r\n//                 // let pos = new Vec3(event.touch._point['x'],event.touch._point['y'],0);\r\n//                 let x = shit.x - 800;\r\n//                 let y = shit.y - 450;\r\n//                 //转换为UI坐标\r\n//                 // pos=currentNode.parent.getComponent(UITransform).convertToNodeSpaceAR(pos);\r\n//                 // console.log(pos);\r\n//                 currentNode.setPosition(x,y,0);\r\n//                 // this.node.parent.parent.getChildByName('pao1').destroy();\r\n//             }else{\r\n//             //TODO:同时使用多个炮的时候可能会造成冲突\r\n//                 let node = new Node('pao1');\r\n//                 node.addComponent(Sprite);\r\n//                 resources.load('pao/spriteFrame',SpriteFrame,(_err,spriteFrame)=>{\r\n//                     node.getComponent(Sprite).spriteFrame = spriteFrame;\r\n//                     //在cocos3x版本中，layer默认为default，node.layer = Layers.Enum.UI_2D；\r\n//                     //2d摄像头可见的是UI_2D和UI_3D\r\n//                     node.layer = Layers.Enum.UI_2D;\r\n//                     node.setScale(0.3,0.3,1);\r\n//                     //添加碰撞组件\r\n//                     node.addComponent(BoxCollider2D);\r\n//                     node.getComponent(BoxCollider2D).group = 4;\r\n//                     console.log(node.getComponent(BoxCollider2D))\r\n//                     node.addComponent(toolPyManeger);\r\n//                     node.addComponent(PaoState)\r\n//                     // node.setPosition(event.touch.point.x)\r\n//                     // console.log(node);\r\n//                     // console.log(event.touch._point.x);\r\n//                     // node.active = false;\r\n//                     console.log('炮创建成功');\r\n//                 })\r\n//                 //放在战斗组，目前还没定义战斗组，所有放在顶层；\r\n//                 node.parent = this.node.parent.parent.parent;\r\n//                 // let x = event.touch._point['x'];\r\n//                 // let y = event.touch._point['y'];\r\n//                 // node.setPosition(x,y,0);\r\n//             }\r\n//           },this)\r\n\r\n//         this.node.on(Node.EventType.TOUCH_END,this.nodeTouchEnd,this);\r\n//         this.node.on(Node.EventType.TOUCH_CANCEL,this.nodeTouchCancel,this);\r\n//     }\r\n\r\n//     nodeTouchEnd(event) {\r\n//         console.log('已松开鼠标')\r\n//     }\r\n\r\n//     nodeTouchCancel(event){\r\n//         console.log('已取消触摸事件')\r\n//         let nodePao = this.node.parent.parent.parent.getChildByName('pao1');\r\n//         console.log(nodePao.getComponent(Collider2D))\r\n//         let step = nodePao.getComponent(PaoState).ToolStateManeger.step;\r\n//         console.log(\"step:\",step);\r\n//         if(!step){\r\n//             console.log('离开碰撞且取消触摸事件')\r\n//             nodePao.destroy();\r\n//         }else{\r\n//             // nodePao.parent = find()\r\n//             let parentName = nodePao.getComponent(PaoState).ToolStateManeger.master\r\n//             console.log('这个node从属于',nodePao.getComponent(PaoState).ToolStateManeger.master)\r\n//             console.log(nodePao.parent.getChildByName(\"left\").getChildByName(parentName))\r\n\r\n//             //TODO:增加逻辑；若该组件下面挂在了一个tool了，就不允许再创建新的tool；\r\n//             let NewNode = this.NewPao();\r\n//             NewNode.parent = this.node.parent.parent.parent.getChildByName(\"left\").getChildByName(parentName);\r\n//             NewNode.active = true;\r\n//             nodePao.destroy();\r\n//             // nodePao.setPosition(100,100,0)\r\n//             // console.log(nodePao.parent);\r\n\r\n//         }\r\n//     }\r\n\r\n//     NewPao(){\r\n//         let node = new Node('pao');\r\n//         node.addComponent(Sprite);\r\n//         resources.load('pao/spriteFrame',SpriteFrame,(_err,spriteFrame)=>{\r\n//             node.getComponent(Sprite).spriteFrame = spriteFrame;\r\n//             //在cocos3x版本中，layer默认为default，node.layer = Layers.Enum.UI_2D；\r\n//             //2d摄像头可见的是UI_2D和UI_3D\r\n//             node.layer = Layers.Enum.UI_2D;\r\n//             node.setScale(0.3,0.3,1);\r\n//             //添加碰撞组件\r\n//             // node.addComponent(BoxCollider2D);\r\n//             // node.getComponent(BoxCollider2D).group = 4;\r\n//             // console.log(node.getComponent(BoxCollider2D))\r\n//             // node.addComponent(workPyManeger);\r\n//             // node.addComponent(PaoState)\r\n//             // node.setPosition(event.touch.point.x)\r\n//             // console.log(node);\r\n//             // console.log(event.touch._point.x);\r\n//             // node.active = false;\r\n\r\n//             //测试子弹发射的脚本\r\n//             node.addComponent(test)\r\n//             console.log('炮开始工作');\r\n//         })\r\n\r\n//         return node;\r\n//     }\r\n// }\r\n\r\n\r\n"]}