{"version":3,"sources":["file:///D:/Gameproject/NewProject-001/assets/script/canvas.ts"],"names":["_decorator","Component","UITransform","PhysicsSystem2D","Contact2DType","ccclass","property","canvas","start","uiTransform","node","getComponent","setAnchorPoint","instance","on","BEGIN_CONTACT","onBeginContact","END_CONTACT","onEndContact","PRE_SOLVE","onPreSolve","POST_SOLVE","onPostSolve","update","deltaTime","selfCollider","otherCollider","contact","console","log"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,W,OAAAA,W;AAAuBC,MAAAA,e,OAAAA,e;AAAiBC,MAAAA,a,OAAAA,a;;;;;;;;;OACxE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;wBAGjBO,M,WADZF,OAAO,CAAC,QAAD,C,gBAAR,MACaE,MADb,SAC4BN,SAD5B,CACsC;AAClCO,QAAAA,KAAK,GAAG;AACJ,cAAMC,WAAW,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBT,WAAvB,CAApB;AACAO,UAAAA,WAAW,CAACG,cAAZ,CAA2B,CAA3B,EAA8B,CAA9B;;AACA,cAAIT,eAAe,CAACU,QAApB,EAA8B;AAC1BV,YAAAA,eAAe,CAACU,QAAhB,CAAyBC,EAAzB,CAA4BV,aAAa,CAACW,aAA1C,EAAyD,KAAKC,cAA9D,EAA8E,IAA9E;AACAb,YAAAA,eAAe,CAACU,QAAhB,CAAyBC,EAAzB,CAA4BV,aAAa,CAACa,WAA1C,EAAuD,KAAKC,YAA5D,EAA0E,IAA1E;AACAf,YAAAA,eAAe,CAACU,QAAhB,CAAyBC,EAAzB,CAA4BV,aAAa,CAACe,SAA1C,EAAqD,KAAKC,UAA1D,EAAsE,IAAtE;AACAjB,YAAAA,eAAe,CAACU,QAAhB,CAAyBC,EAAzB,CAA4BV,aAAa,CAACiB,UAA1C,EAAsD,KAAKC,WAA3D,EAAwE,IAAxE;AACH;AACJ;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAEDR,QAAAA,cAAc,CAAES,YAAF,EAA4BC,aAA5B,EAAuDC,OAAvD,EAA0F;AACpG;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;;AACDX,QAAAA,YAAY,CAAEO,YAAF,EAA4BC,aAA5B,EAAuDC,OAAvD,EAA0F;AAClG;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;;AACDT,QAAAA,UAAU,CAAEK,YAAF,EAA4BC,aAA5B,EAAuDC,OAAvD,EAA0F;AAChG;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH;;AACDP,QAAAA,WAAW,CAAEG,YAAF,EAA4BC,aAA5B,EAAuDC,OAAvD,EAA0F;AACjG;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;;AA/BiC,O","sourcesContent":["import { _decorator, Component, Node, UITransform, director, PhysicsSystem2D, Contact2DType, Collider2D, IPhysics2DContact } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('canvas')\r\nexport class canvas extends Component {\r\n    start() {\r\n        const uiTransform = this.node.getComponent(UITransform);\r\n        uiTransform.setAnchorPoint(0, 0);\r\n        if (PhysicsSystem2D.instance) {\r\n            PhysicsSystem2D.instance.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            PhysicsSystem2D.instance.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n            PhysicsSystem2D.instance.on(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\r\n            PhysicsSystem2D.instance.on(Contact2DType.POST_SOLVE, this.onPostSolve, this);\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n\r\n    onBeginContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体开始接触时被调用一次\r\n        console.log('onBeginContact');\r\n    }\r\n    onEndContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体结束接触时被调用一次\r\n        console.log('onEndContact');\r\n    }\r\n    onPreSolve (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 每次将要处理碰撞体接触逻辑时被调用\r\n        console.log('onPreSolve');\r\n    }\r\n    onPostSolve (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 每次处理完碰撞体接触逻辑时被调用\r\n        console.log('onPostSolve');\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}