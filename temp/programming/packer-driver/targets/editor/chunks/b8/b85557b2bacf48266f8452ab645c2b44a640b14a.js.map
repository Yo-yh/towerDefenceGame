{"version":3,"sources":["file:///D:/Gameproject/NewProject-001/assets/script/PaoPerManeger.ts"],"names":["_decorator","Component","Node","PhysicsSystem2D","EPhysics2DDrawFlags","Collider2D","Contact2DType","resources","ccclass","property","PaoPerManeger","bulletArray","hasEmeny","onLoad","instance","enable","debugDrawFlags","Aabb","Pair","CenterOfMass","Joint","Shape","start","console","log","collider","node","getComponent","on","BEGIN_CONTACT","onBeginContact","END_CONTACT","onEndContact","PRE_SOLVE","onPreSolve","POST_SOLVE","onPostSolve","selfCollider","otherCollider","contact","update","deltaTime","createBullet","that","load","push"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, PhysicsSystem2D, EPhysics2DDrawFlags, Collider2D, Contact2DType, IPhysics2DContact, BoxCollider2D, director, Sprite, Color, resources, SpriteFrame, Layers, find } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PaoPerManeger')\r\nexport class PaoPerManeger extends Component {\r\n    \r\n    public bulletArray = [];\r\n    public hasEmeny = false;\r\n    onLoad(){\r\n        // director.enable = true;\r\n        //绘制物理信息\r\n        PhysicsSystem2D.instance.enable = true;\r\n        PhysicsSystem2D.instance.debugDrawFlags = EPhysics2DDrawFlags.Aabb | \r\n            EPhysics2DDrawFlags.Pair | \r\n            EPhysics2DDrawFlags.CenterOfMass |\r\n            EPhysics2DDrawFlags.Joint |\r\n            EPhysics2DDrawFlags.Shape ;\r\n    }\r\n\r\n    start(){\r\n        \r\n        // 批量生成子弹\r\n        // let that = this;\r\n        // this.schedule(function(){\r\n        //     if(this.hasEmeny){\r\n        //         console.log('createBullet')\r\n        //         that.createBullet(that);\r\n        //     }\r\n        // },1)\r\n        \r\n        //注册单个碰撞体的回调函数\r\n        console.log('tool information')\r\n        let collider = this.node.getComponent(Collider2D);\r\n        console.log(collider);\r\n        // console.log(collider);\r\n        if (collider) {\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n            collider.on(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\r\n            collider.on(Contact2DType.POST_SOLVE, this.onPostSolve, this);\r\n        }\r\n\r\n        // 注册全局碰撞回调函数\r\n        // if (PhysicsSystem2D.instance) {\r\n        //     PhysicsSystem2D.instance.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n        //     PhysicsSystem2D.instance.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n        //     PhysicsSystem2D.instance.on(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\r\n        //     PhysicsSystem2D.instance.on(Contact2DType.POST_SOLVE, this.onPostSolve, this);\r\n        // }\r\n    }\r\n    \r\n    onBeginContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体开始接触时被调用一次\r\n        this.hasEmeny = true;\r\n        console.log('Emeny in my are onBeginContact');\r\n\r\n    }\r\n    onEndContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体结束接触时被调用一次\r\n        console.log('Work onEndContact');\r\n        this.hasEmeny = false;\r\n\r\n    }\r\n    onPreSolve (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 每次将要处理碰撞体接触逻辑时被调用\r\n        console.log('Work onPreSolve');\r\n    }\r\n    onPostSolve (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 每次处理完碰撞体接触逻辑时被调用\r\n        console.log('Work onPostSolve');\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        // console.log(this.bulletArray.length);\r\n        // for(let i=0;i<this.bulletArray.length;i++){\r\n        //     let node = this.bulletArray[i];\r\n        //     let y = node.position.y;\r\n        //     let x = node.position.x;\r\n        //     x = x - 500 * deltaTime;\r\n        //     y = y + 500 * deltaTime;\r\n        //     node.setPosition(x,y,0)\r\n        //     //TODO:出屏幕后销毁\r\n        // }\r\n    }\r\n\r\n    createBullet(that){\r\n        let node = new Node();\r\n        // node.addComponent(Sprite);\r\n        resources.load()\r\n        // resources.load('zidan1/spriteFrame',SpriteFrame,(_err,sproteFarme)=>{\r\n        //     node.getComponent(Sprite).spriteFrame = sproteFarme;\r\n        //     node.layer = Layers.Enum.UI_2D;\r\n        //     console.log(find(\"left\"))\r\n        //     console.log(this.node)\r\n        //     node.parent = this.node;\r\n        //     console.log(node);\r\n        //     // node.parent = find(\"left\").getChildByName(\"rightUp\").getChildByName(\"pao\")\r\n        // })\r\n        that.bulletArray.push(node);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"]}