{"version":3,"sources":["cce:/internal/x/prerequisite-imports"],"names":["requests","request","_err"],"mappings":";;;;;;AACA;AAEA,YAAM,CAAC,YAAY;AACf,cAAMA,QAAQ,GAAG,CAAC,uCAAD,EAA0F,uCAA1F,EAAgL,uCAAhL,EAAsQ,uCAAtQ,EAAuV,uCAAvV,EAA6a,uCAA7a,EAAsgB,uCAAtgB,EAAqlB,uCAArlB,EAAkqB,uCAAlqB,EAA4vB,uCAA5vB,EAAw1B,wCAAx1B,EAAk7B,wCAAl7B,EAA8/B,wCAA9/B,EAAolC,wCAAplC,EAAiqC,wCAAjqC,EAAuvC,wCAAvvC,CAAjB;;AACA,aAAK,MAAMC,OAAX,IAAsBD,QAAtB,EAAgC;AAC5B,cAAI;AACA,kBAAMC,OAAO,EAAb;AACH,WAFD,CAEE,OAAOC,IAAP,EAAa,CACX;AACH;AACJ;AACJ,OATK,GAAN","sourcesContent":["\n// Auto generated represents the prerequisite imports of project modules.\n\nawait (async () => {\n    const requests = [() => import(\"file:///D:/Gameproject/NewProject-001/assets/script/BulletPerManeger.ts\"), () => import(\"file:///D:/Gameproject/NewProject-001/assets/script/DanperManeger.ts\"), () => import(\"file:///D:/Gameproject/NewProject-001/assets/script/PaoPerManeger.ts\"), () => import(\"file:///D:/Gameproject/NewProject-001/assets/script/PaoState.ts\"), () => import(\"file:///D:/Gameproject/NewProject-001/assets/script/ShenMuManeger.ts\"), () => import(\"file:///D:/Gameproject/NewProject-001/assets/script/ToolStateManeger.ts\"), () => import(\"file:///D:/Gameproject/NewProject-001/assets/script/canvas.ts\"), () => import(\"file:///D:/Gameproject/NewProject-001/assets/script/diji.ts\"), () => import(\"file:///D:/Gameproject/NewProject-001/assets/script/dijiTargetManeger.ts\"), () => import(\"file:///D:/Gameproject/NewProject-001/assets/script/livingSystemManeger.ts\"), () => import(\"file:///D:/Gameproject/NewProject-001/assets/script/locationPyManeger.ts\"), () => import(\"file:///D:/Gameproject/NewProject-001/assets/script/pao.ts\"), () => import(\"file:///D:/Gameproject/NewProject-001/assets/script/targetManeger.ts\"), () => import(\"file:///D:/Gameproject/NewProject-001/assets/script/test.ts\"), () => import(\"file:///D:/Gameproject/NewProject-001/assets/script/toolPyManeger.ts\"), () => import(\"file:///D:/Gameproject/NewProject-001/assets/script/workPyManeger.ts\")];\n    for (const request of requests) {\n        try {\n            await request();\n        } catch (_err) {\n            // The error should have been caught by executor.\n        }\n    }\n})();\n    "]}