{"version":3,"sources":["file:///D:/Gameproject/NewProject-001/assets/script/canvas.ts"],"names":["_decorator","Component","UITransform","ccclass","property","canvas","start","uiTransform","node","getComponent","setAnchorPoint","update","deltaTime"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,W,OAAAA,W;;;;;;;;;OAChC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;wBAGjBK,M,WADZF,OAAO,CAAC,QAAD,C,gBAAR,MACaE,MADb,SAC4BJ,SAD5B,CACsC;AAClCK,QAAAA,KAAK,GAAG;AACJ,gBAAMC,WAAW,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBP,WAAvB,CAApB;AACAK,UAAAA,WAAW,CAACG,cAAZ,CAA2B,CAA3B,EAA8B,CAA9B,EAFI,CAGJ;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB,CAdiC,CAgBlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA/BkC,O","sourcesContent":["import { _decorator, Component, Node, UITransform, director, PhysicsSystem2D, Contact2DType, Collider2D, IPhysics2DContact } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('canvas')\r\nexport class canvas extends Component {\r\n    start() {\r\n        const uiTransform = this.node.getComponent(UITransform);\r\n        uiTransform.setAnchorPoint(0, 0);\r\n        // if (PhysicsSystem2D.instance) {\r\n        //     PhysicsSystem2D.instance.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n        //     PhysicsSystem2D.instance.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n        //     PhysicsSystem2D.instance.on(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\r\n        //     PhysicsSystem2D.instance.on(Contact2DType.POST_SOLVE, this.onPostSolve, this);\r\n        // }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n\r\n    // onBeginContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n    //     // 只在两个碰撞体开始接触时被调用一次\r\n    //     console.log('onBeginContact');\r\n    // }\r\n    // onEndContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n    //     // 只在两个碰撞体结束接触时被调用一次\r\n    //     console.log('onEndContact');\r\n    // }\r\n    // onPreSolve (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n    //     // 每次将要处理碰撞体接触逻辑时被调用\r\n    //     console.log('onPreSolve');\r\n    // }\r\n    // onPostSolve (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n    //     // 每次处理完碰撞体接触逻辑时被调用\r\n    //     console.log('onPostSolve');\r\n    // }\r\n\r\n}\r\n\r\n\r\n"]}