{"version":3,"sources":["file:///D:/Gameproject/NewProject-001/assets/script/diji.ts"],"names":["_decorator","Component","Collider2D","Contact2DType","PhysicsSystem2D","EPhysics2DDrawFlags","instantiate","resources","Prefab","Layers","NodePool","Vec2","BulletPerManeger","dijiTargetManeger","ccclass","property","diji","bulletArray","hasEmeny","targetArray","bulletPool","start","that","schedule","node","parent","getComponent","console","log","createBullet","collider","on","BEGIN_CONTACT","onBeginContact","END_CONTACT","onEndContact","PRE_SOLVE","onPreSolve","POST_SOLVE","onPostSolve","onLoad","instance","enable","debugDrawFlags","Aabb","Pair","CenterOfMass","Joint","Shape","update","deltaTime","y","position","x","setPosition","i","length","bulletNode","istarget","isOverScreen","put","selfCollider","otherCollider","contact","getAngle","end","dx","dy","dir","load","err","layer","Enum","UI_2D","addChild","push"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Collider2D, Contact2DType, PhysicsSystem2D, EPhysics2DDrawFlags, IPhysics2DContact, instantiate, resources, Prefab, Layers, Vec3, NodePool, Vec2 } from 'cc';\r\nimport { BulletPerManeger } from './BulletPerManeger';\r\nimport { dijiTargetManeger } from './dijiTargetManeger';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('diji')\r\nexport class diji extends Component {\r\n    public bulletArray = [];\r\n    public hasEmeny:boolean = true;\r\n    private targetArray:Array<Vec3> = null\r\n    public bulletPool:NodePool;\r\n    start() {\r\n        let that = this;\r\n        this.bulletPool = new NodePool();\r\n        this.schedule(function(){\r\n            this.hasEmeny = this.node.parent.getComponent(dijiTargetManeger).hasEmeny;\r\n            if(this.hasEmeny){\r\n                console.log('createBullet')\r\n                that.createBullet();\r\n                // if(that.bulletPool.size()>5){\r\n                //     that.bulletPool.clear()\r\n                // }\r\n            }\r\n        },1)\r\n\r\n        console.log('emeny information')\r\n        let collider = this.node.getComponent(Collider2D);\r\n        // console.log(collider);\r\n        // console.log(collider);\r\n        if (collider) {\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n            collider.on(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\r\n            collider.on(Contact2DType.POST_SOLVE, this.onPostSolve, this);\r\n        }\r\n    }\r\n    onLoad(){\r\n        // director.enable = true;\r\n        //绘制物理信息\r\n        PhysicsSystem2D.instance.enable = true;\r\n        PhysicsSystem2D.instance.debugDrawFlags = EPhysics2DDrawFlags.Aabb | \r\n            EPhysics2DDrawFlags.Pair | \r\n            EPhysics2DDrawFlags.CenterOfMass |\r\n            EPhysics2DDrawFlags.Joint |\r\n            EPhysics2DDrawFlags.Shape ;\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        let node =this.node.parent;\r\n        let y = node.position.y;\r\n        let x = node.position.x;\r\n        if(x > -200){\r\n            //敌军飞机不超过神木；\r\n        }else{\r\n            x = x + 40 * deltaTime;\r\n            y = y - 10 * deltaTime;\r\n            node.setPosition(x,y,0);\r\n        }\r\n        \r\n\r\n        for(let i=0;i<this.bulletArray.length;i++){\r\n            let bulletNode = this.bulletArray[i];\r\n            let istarget = bulletNode.getComponent(BulletPerManeger).istarget;\r\n            let isOverScreen = bulletNode.getComponent(BulletPerManeger).isOverScreen;\r\n            // console.log(\"是否命中\",istarget)\r\n            if(istarget || isOverScreen){\r\n                // bulletNode.destroy()\r\n                this.bulletPool.put(bulletNode);\r\n            }\r\n            let y = bulletNode.position.y;\r\n            let x = bulletNode.position.x;\r\n            // let distanceX = this.bulletArray[0].x - x;\r\n            // let distanceY = this.bulletArray[0].y - y;\r\n            // let cosx = 500 * distanceX\r\n            x = x + 500 * deltaTime;\r\n            y = y - 500 * deltaTime;\r\n            bulletNode.setPosition(x,y,0)\r\n\r\n            \r\n            //TODO:出屏幕后销毁\r\n        }\r\n    }\r\n\r\n    onBeginContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体开始接触时被调用一次\r\n        // this.hasEmeny = true;\r\n        // this.targetArray.push(otherCollider.node.position)\r\n        // console.log(\"maybe a information about position\",otherCollider.node.position)\r\n        // console.log('I am emeny onBeginContact');\r\n\r\n    }\r\n    onEndContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体结束接触时被调用一次\r\n        // console.log('Work onEndContact');\r\n\r\n    }\r\n    onPreSolve (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 每次将要处理碰撞体接触逻辑时被调用\r\n        // console.log('Work onPreSolve');\r\n    }\r\n    onPostSolve (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 每次处理完碰撞体接触逻辑时被调用\r\n        // console.log('Work onPostSolve');\r\n\r\n    }\r\n    getAngle(start:Vec3,end:Vec3){\r\n        let dx = start.x - end.x;\r\n        let dy = start.y - end.y;\r\n        let dir = new Vec2(dx,dy);\r\n        \r\n    }\r\n    createBullet(){\r\n        // let node = new Node();\r\n        // node.addComponent(Sprite);\r\n        let that = this;\r\n        resources.load(\"perfabs/Bullet_Pre\",Prefab,(err,Prefab)=>{\r\n            if(!Prefab){\r\n                console.log('子弹预制体为空')\r\n            }else{\r\n                console.log('预制体制作完成')\r\n                let node = instantiate(Prefab);\r\n                if(!node){\r\n                    console.log('没有节点')\r\n                }else{\r\n                    // console.log(node)\r\n                    // let pos = new Vec2();\r\n                    node.layer = Layers.Enum.UI_2D;\r\n                    let x = that.node.position.x + 400;\r\n                    let y = that.node.position.x + 225;\r\n                    \r\n                    // let shit = pos.set(x,y)\r\n                    // x = shit.x - 800;                   \r\n                    // y = shit.y - 450;\r\n                    console.log(x,y)\r\n                    node.setPosition(0,0,0);\r\n                    that.node.addChild(node);\r\n                    that.bulletArray.push(node);\r\n                }\r\n                \r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n"]}