{"version":3,"sources":["file:///D:/Gameproject/NewProject-001/assets/script/BulletPerManeger.ts"],"names":["_decorator","Component","PhysicsSystem2D","EPhysics2DDrawFlags","Collider2D","Contact2DType","ccclass","property","BulletPerManeger","onLoad","instance","enable","debugDrawFlags","Aabb","Pair","CenterOfMass","Joint","Shape","start","console","log","collider","node","getComponent","on","BEGIN_CONTACT","onBeginContact","END_CONTACT","onEndContact","PRE_SOLVE","onPreSolve","POST_SOLVE","onPostSolve","update","deltaTime","x","position","y","isOverScreen","selfCollider","otherCollider","contact","istarget","ifTarget"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, PhysicsSystem2D, EPhysics2DDrawFlags, Collider2D, Contact2DType, IPhysics2DContact, BoxCollider2D, director, Sprite, Color, resources, SpriteFrame, Layers, find } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('BulletPerManeger')\r\nexport class BulletPerManeger extends Component {\r\n    @property \r\n    isOverScreen:boolean = false;\r\n    @property\r\n    istarget:boolean = false;\r\n    onLoad() {\r\n        //绘制物理信息\r\n        PhysicsSystem2D.instance.enable = true;\r\n        PhysicsSystem2D.instance.debugDrawFlags = EPhysics2DDrawFlags.Aabb | \r\n            EPhysics2DDrawFlags.Pair | \r\n            EPhysics2DDrawFlags.CenterOfMass |\r\n            EPhysics2DDrawFlags.Joint |\r\n            EPhysics2DDrawFlags.Shape ;\r\n    }\r\n\r\n    start(){\r\n        //注册单个碰撞体的回调函数\r\n        console.log('tool information')\r\n        let collider = this.node.getComponent(Collider2D);\r\n        console.log(collider);\r\n        // console.log(collider);\r\n        if (collider) {\r\n            collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n            collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n            collider.on(Contact2DType.PRE_SOLVE, this.onPreSolve, this);\r\n            collider.on(Contact2DType.POST_SOLVE, this.onPostSolve, this);\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        let x = this.node.position.x\r\n        let y = this.node.position.y\r\n        if(x>800 || x<-800 || y>450 || y<-450){\r\n            this.isOverScreen = true;\r\n        }\r\n    }\r\n\r\n    onBeginContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体开始接触时被调用一次\r\n        console.log('Bullet BOOMBOOM');\r\n        console.log(\"i am bullet , my target is\",otherCollider)\r\n        this.istarget = true;\r\n        // this.node.destroy()\r\n    }\r\n    onEndContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 只在两个碰撞体结束接触时被调用一次\r\n        console.log('Bullet ENDEND');\r\n        // this.node.destroy()\r\n\r\n    }\r\n    onPreSolve (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 每次将要处理碰撞体接触逻辑时被调用\r\n        // console.log('Bullet and Emeny Work onPreSolve');\r\n    }\r\n    onPostSolve (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\r\n        // 每次处理完碰撞体接触逻辑时被调用\r\n        console.log('Bullet and Emeny Work onPostSolve');\r\n\r\n    }\r\n\r\n    ifTarget():boolean{\r\n        return this.istarget;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n"]}